// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contacts {
  id_contacts   String   @id @default(uuid())
  name          String
  email         String
  phone         String
  message       String
  was_contacted Boolean  @default(false)
  is_deleted    Boolean  @default(false)
  updated_at    DateTime @updatedAt
  created_at    DateTime @default(now())

  @@map("contacts")
}

model Employee {
  id_employee String   @id @default(uuid())
  first_name  String
  last_name   String
  email       String   @unique
  cpf         String
  password    String
  is_deleted  Boolean  @default(false)
  updated_at  DateTime @updatedAt
  created_at  DateTime @default(now())
  Tasks       Task[]

  @@map("employee")
}

enum Status {
  TODO
  DOING
  DONE
}

model Task {
  id_task     String   @id @default(uuid())
  id_employee String
  employee    Employee @relation(fields: [id_employee], references: [id_employee])

  title       String
  description String
  deadline    DateTime
  status      Status
  is_deleted  Boolean  @default(false)
  updated_at  DateTime @updatedAt
  created_at  DateTime @default(now())

  @@map("task")
}

model Media {
  id_media      String          @id @default(uuid())
  type          String
  height        Float
  width         Float
  region        String
  description   String
  latitude      Float
  longitude     Float
  is_deleted    Boolean         @default(false)
  is_available  Boolean         @default(true)
  updated_at    DateTime        @updatedAt
  created_at    DateTime        @default(now())
  MediaImages   MediaImages[]
  MediaCashFlow MediaCashFlow[]

  @@map("media")
}

model MediaImages {
  id_media_images String @id @default(uuid())

  id_media String
  media    Media  @relation(fields: [id_media], references: [id_media])

  url        String
  is_deleted Boolean  @default(false)
  updated_at DateTime @updatedAt
  created_at DateTime @default(now())

  @@map("media_images")
}

model MediaCashFlow {
  id_media_cash_flow String   @id @default(uuid())
  id_media           String
  media              Media    @relation(fields: [id_media], references: [id_media])
  description        String
  reference_date     DateTime
  quantity           Float
  is_deleted         Boolean  @default(false)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  @@map("media_cash_flow")
}
